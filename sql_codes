AD-HOC-REQUESTS
Requests:

1.Provide the list of markets in which customer “Atliq Exclusive" operates its business in the APAC region. 
Query:
  
select distinct(market)
from gdb023.dim_customer
where customer='Atliq Exclusive' and region='APAC';

2.What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields, unique_products_2020 unique_products_2021 percentage_chg. 
Query:

with up2020 as (
			          select count (distinct product_code) as unique_product_2020
			          from fact_sales_monthly
			          where fiscal_year=2020
                ),
    up2021 as (
			         select count (distinct product_code) as unique_product_2021
			         from fact_sales_monthly
			         where fiscal_year=2021
                )
select unique_product_2020, unique_product_2021,
round(((unique_product_2021-unique_product_2020)/unique_product_2020*100)) as Percentage_chg
from up2020, up2021;


3.Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. The final output contains 2 fields, segment, product_count.
Query:
  
SELECT segment, COUNT(DISTINCT product) as product_count
FROM dim_product
GROUP BY segment
ORDER BY product_count DESC;


4.Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? The final output contains these fields, segment product_count_2020 product_count_2021 difference 
Query:
with table1 as (
                select segment, count (distinct product) as product_count_2020
			          from dim_product p
			          join fact_sales_monthly f 
			          on f. product_code = p. product_code
			          where fiscal_year=2020
			          group by segment),
     table2 as (
			          select segment, count (distinct product) as product_count_2021
			          from dim_product p
			          join fact_sales_monthly f 
			          on f. product_code = p. product_code
			          where fiscal_year=2021
			          group by segment)
select table1. segment,  product_count_2020,product_count_2021,product_count_2021 - product_count_2020 as difference
from table1 
join table2 
on table1.segment=table2.segment
order by product_count_2021 desc;


5.Get the products that have the highest and lowest manufacturing costs.  The final output should contain these fields, product_code, product, manufacturing_cost.
Query:

SELECT m. product_code, p. product, m. manufacturing_cost
FROM gdb023.fact_manufacturing_cost m
join dim_product p
on p. product_code=m. product_code
where m. manufacturing_cost = (
                                select max(manufacturing_cost)
                                from fact_manufacturing_cost) 
                                or m. manufacturing_cost = (select min(manufacturing_cost)
                                from fact_manufacturing_cost)
                                order by manufacturing_cost desc;

6.Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the Indian market. The final output contains these fields, customer_code, customer, average_discount_percentage. 
Query:
  
     select c. customer_code, c. customer,
	   avg (pre_invoice_discount_pct) *100 as avg_discount_pct
     from dim_customer c
     join fact_pre_invoice_deductions pd
     using(customer_code)
     where fiscal_year= 2021 and market='india'
     group by c. customer_code, c. customer 
     order by avg_discount_pct desc
     limit 5;

7.Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month. This analysis helps to get an idea of low and high-performing months and take strategic decisions. 
 The final report contains these columns: 
 Month 
 Year 
 Gross sales Amount 
Query:
  
select monthname (s. date) as months,
	     year (s. date) as years,
       round (sum (s. sold_quantity*g. gross_price),2) as gross_sales_amount
from fact_gross_price g
join fact_sales_monthly s
using(product_code)
join dim_customer c 
using(customer_code)
where customer = "Atliq Exclusive"
group by months, years;


8.In which quarter of 2020, got the maximum total_sold_quantity? The final output contains these fields sorted by the total_sold_quantity, 
 Quarter total_sold_quantity 
Query:
     select
     case 
           when date between '2019-09-01' and '2019-11-01' then 1
           when date between '2019-12-01' and '2020-02-01' then 2
           when date between '2020-03-01' and '2020-05-01'then 3
           when date between '2020-06-01' and '2020-08-01' then 4
     end as quarters,
     sum(sold_quantity) as total_sold_quantity
     from fact_sales_monthly 
     where fiscal_year = 2020
     group by quarters
     order by total_sold_quantity desc;


9.Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution?  The final output contains these fields, 
 channel gross_sales_mln percentage 
Query:
  
With x as (
            Select c. channel,
            Round (sum (g. gross_price *s. sold_quantity)/100000,2) as gross_sales_mln
            from fact_sales_monthly s
            join dim_customer c
            using(customer_code)
            join fact_gross_price g
            using(product_code)
            where s. fiscal_year = 2021
            group by c. channel)
select channel, gross_sales_mln,
       round ((gross_sales_mln/ (select sum(gross_sales_mln) from x))*100,2) as pct
from x
order by gross_sales_mln desc;

10.Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? The final output contains these fields, 
 division product_code product total_sold_quantity rank_order 
Query:
  
with products_rank as (
                        select f. product_code, p. product, p. division,
                        sum (f. sold_quantity) as total_quantity,
                        rank () over (partition by p. division order by sum (f. sold_quantity) desc) as rank_order
                        from fact_sales_monthly f
                        join dim_product p
                        using (product_code)
                        where fiscal_year = 2021
                        group by p. division, p. product, f. product_code)
select * from products_rank
where rank_order <=3
order by division, rank_order;
